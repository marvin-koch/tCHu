Index: src/ch/epfl/tchu/game/PlayerId.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ch.epfl.tchu.game;\r\n\r\nimport java.util.List;\r\n\r\n/**\r\n * Le type énuméré PlayerId représente l'identité d'un joueur.\r\n *\r\n * @author Shangeeth Poobalasingam (329307)\r\n * @author Marvin Koch (324448)\r\n */\r\npublic enum PlayerId {\r\n    PLAYER_1,\r\n    PLAYER_2,\r\n    PLAYER_3;\r\n\r\n    /**\r\n     * Retourne une liste de tout les joueurs\r\n     */\r\n    public static final List<PlayerId> ALL = List.of(PlayerId.values());\r\n\r\n    /**\r\n     * Retourne le nombre de joueur\r\n     */\r\n    public static final int COUNT = ALL.size();\r\n\r\n    /**\r\n     * retourne l'identité du joueur qui suit celui auquel on l'applique, c-à-d PLAYER_2 pour PLAYER_1, et PLAYER_1 pour PLAYER_2\r\n     * @return PlayerId\r\n     */\r\n    public PlayerId next(){\r\n        return this.equals(PLAYER_1) ? PLAYER_2 : PLAYER_1;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ch/epfl/tchu/game/PlayerId.java b/src/ch/epfl/tchu/game/PlayerId.java
--- a/src/ch/epfl/tchu/game/PlayerId.java	(revision 39692f47bf3d5f4bad8b0c09ed47c6feaa8b3b7d)
+++ b/src/ch/epfl/tchu/game/PlayerId.java	(date 1621620574530)
@@ -1,5 +1,7 @@
 package ch.epfl.tchu.game;
 
+import ch.epfl.tchu.gui.ServerMain;
+
 import java.util.List;
 
 /**
@@ -16,7 +18,7 @@
     /**
      * Retourne une liste de tout les joueurs
      */
-    public static final List<PlayerId> ALL = List.of(PlayerId.values());
+    public static final List<PlayerId> ALL = ServerMain.is3Player? List.of(PlayerId.values()): List.of(PlayerId.values()).subList(0,3);
 
     /**
      * Retourne le nombre de joueur
@@ -28,7 +30,20 @@
      * @return PlayerId
      */
     public PlayerId next(){
-        return this.equals(PLAYER_1) ? PLAYER_2 : PLAYER_1;
+        switch (this){
+            case PLAYER_1:
+                return PLAYER_2;
+            case PLAYER_2:
+                return ServerMain.is3Player? PLAYER_3: PLAYER_1;
+            case PLAYER_3:
+                return PLAYER_1;
+            default:
+                throw new Error();
+        }
+    }
+
+    public PlayerId doubleNext() {
+        return next().next();
     }
 }
 
